name: Flask Application CI Pipeline

on:
  push:
    tags:
      - 'v*' 

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify tag is from flask/main
        run: |
          DEFAULT_BRANCH="flask/main"
          if git branch --contains $GITHUB_SHA | grep -q "$DEFAULT_BRANCH"; then
            echo "✅ Tag commit exists in $DEFAULT_BRANCH"
          else
            echo "❌ Tag is not based on $DEFAULT_BRANCH"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install flake8
      - name: Run Linting with Flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    services:
      mysql:
        image: taha2samy/mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Tests
        env:
          PYTHONPATH: .
          MYSQL_DATABASE_HOST: 127.0.0.1
          MYSQL_DATABASE_USER: root
          MYSQL_DATABASE_PASSWORD: testpassword
          MYSQL_DATABASE_DB: test_db
        run: pytest tests/ --cov=app --cov-report=xml --cov-fail-under=80
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: taha2samy/fawry-flask-app

      - name: Build and push Flask application image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
